{"ast":null,"code":"var _jsxFileName = \"/Users/jeanrou02/Documents/School/University/E_Winter_2022/ENSF 381/Assignment_6/assignment-06-lotion-JeanRou/src/elements/NotePreview.js\";\nimport \"./../styles/NotePreview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\"\n};\nconst formatDate = when => {\n  const formatted = new Date(when).toLocaleString(\"en-US\", options);\n  if (formatted === \"Invalid Date\") {\n    return \"\";\n  }\n  return formatted;\n};\nexport default function NotePreview(_ref) {\n  let {\n    text,\n    title,\n    date\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notePreview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-title\",\n        children: [\" \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [\" \", formatdate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: [\" \", text.slice(0, 100), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = NotePreview;\nvar _c;\n$RefreshReg$(_c, \"NotePreview\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","NotePreview","_ref","text","title","date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","formatdate","slice","_c","$RefreshReg$"],"sources":["/Users/jeanrou02/Documents/School/University/E_Winter_2022/ENSF 381/Assignment_6/assignment-06-lotion-JeanRou/src/elements/NotePreview.js"],"sourcesContent":["import \"./../styles/NotePreview.css\";\n\nconst options = {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n};\n\nconst formatDate = (when) => {\n  const formatted = new Date(when).toLocaleString(\"en-US\", options);\n  if (formatted === \"Invalid Date\") {\n      return \"\";\n  }\n  return formatted;\n};\n\nexport default function NotePreview({text, title, date}) {\n  return (\n    <>\n      <div className=\"notePreview-container\">\n        <div className=\"note-title\"> {title} </div>\n        <div className=\"date\"> {formatdate} </div>\n        <div className=\"preview\"> {text.slice(0,100)} </div>\n      </div>\n    </>\n  );\n}"],"mappings":";AAAA,OAAO,6BAA6B;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,MAAM;EACbC,GAAG,EAAE,SAAS;EACdC,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,cAAc,CAAC,OAAO,EAAEV,OAAO,CAAC;EACjE,IAAIQ,SAAS,KAAK,cAAc,EAAE;IAC9B,OAAO,EAAE;EACb;EACA,OAAOA,SAAS;AAClB,CAAC;AAED,eAAe,SAASG,WAAWA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAAH,IAAA;EACrD,oBACEf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBACpCnB,OAAA;QAAKoB,SAAS,EAAC,YAAY;QAAAD,QAAA,GAAC,GAAC,EAACF,KAAK,EAAC,GAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC3CxB,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAD,QAAA,GAAC,GAAC,EAACM,UAAU,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1CxB,OAAA;QAAKoB,SAAS,EAAC,SAAS;QAAAD,QAAA,GAAC,GAAC,EAACH,IAAI,CAACU,KAAK,CAAC,CAAC,EAAC,GAAG,CAAC,EAAC,GAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChD,iBACL;AAEP;AAACG,EAAA,GAVuBb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}